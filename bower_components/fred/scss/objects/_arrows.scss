/**

## Arrows

Apply the modifier classes to the parent. For instance, this will put an
arrow in the top left corner of the containing div:

```html
<div class='arrow--left block-xs block--color-3'>
    <p> ... </p>
    <i class='arrow arrow-top'></i>
</div>

<div class='arrow--right block-xs block--color-3'>
    <p> ... </p>
    <i class='arrow arrow-top '></i>
</div>

<div class='arrow--center block-xs block--color-3'>
    <p> ... </p>
    <i class='arrow arrow-bottom '></i>
</div>

<div class='arrow--side block-xs block--color-3'>
    <p> ... </p>
    <i class='arrow arrow-left '></i>
</div>
```

*/

.arrow {/*i,span*/
    @extend %inline-block; // This extend is found in core
    @extend %absolute; // This extend is found in core
    border-color: transparent;
    border-style: solid;
    border-width: .5em;
    height: 0;
    width: 0;
}

    .arrow-top {
        border-bottom-color: inherit;
        border-top-width: 0;
        top: -.4em;
    }

    .arrow-bottom {
        border-bottom-width: 0;
        border-top-color: inherit;
        bottom: -.4em;
    }

    .arrow-left {
        border-left-width: 0;
        border-right-color: inherit;
        left: -.4em;
    }

    .arrow-right {
        border-left-color: inherit;
        border-right-width: 0;
        right: -.4em;
    }

.arrow--left,
.arrow--right,
.arrow--side,
.arrow--center {/*div,block*/
    @extend %relative;
}

    .arrow--center .arrow {
        @extend %center-element;
        left:0;
        right:0;

    }

    .arrow--left .arrow {
        left: $base-spacing-unit;
    }

    .arrow--right .arrow {
        right: $base-spacing-unit;
    }

    .arrow--side .arrow {
        top: $base-spacing-unit;
    }
