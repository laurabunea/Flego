{% extends "template.twig" %}

{% block content %}
 
    {{ macros.lego('content.media.reversed', {
        'themeClass': 'theme--tertiary', 
        'centergrid':'grid--middle',
        'content': data.closetcontent, 
        'image': data.closetimage
    }) }}

    {{ macros.lego('content.media', {
        'themeClass': 'theme--secondary', 
        'centergrid':'grid--middle', 
        'content': data.closet2content, 
        'image': data.closet2image 
    }) }}

    {{ macros.lego('content.media.reversed', {
        'themeClass': 'theme--secondary', 
        'content': data.closet3content, 
        'image': data.closet3image, 
        'centergrid':'grid--middle'
    }) }}

    <div class='theme--tertiary'>
        <div class='grid-container-xl'>
            
            {{ macros.lego('content.intro', {
                'content': data.themesSection, 
            }) }}

            <div class='grid'>
                
                {% for theme in data.themes %}
                    {{ macros.lego('swatch.theme', {
                        'theme': theme
                    }) }}  
                {% endfor %}

                <!--specify the extra grid item divs you need-->
                <div class='grid__item col-1-4 col-2-4--q-small '>
                </div><!--grid item ends-->
            </div><!--grid ends-->
        </div><!--grid container ends-->
    </div><!--theme ends-->


    <div class='theme--secondary'>
        <div class='grid-container-xl' >
            {{ macros.lego('content.intro', {
                'content': data.spacingSection, 
            }) }}
            <div class='grid'>
                {% for unit in data.spacingUnits %}
                    {{ macros.lego('swatch.spacing', {
                        'spacing': unit
                    }) }}  
                {% endfor %}     
            </div><!--grid ends-->
        </div><!--grid container ends-->
    </div><!--theme ends-->


    <div class='theme--tertiary'>
        <div class='grid-container-xl' >
            {{ macros.lego('content.intro', {
                'content': data.blocksSection, 
            }) }}
            <div class='grid'>
                {% for blocks in data.blocks %}
                    {{ macros.lego('swatch.block', {
                        'block': blocks
                    }) }}  
                {% endfor %} 
            </div><!--grid ends-->
        </div><!--grid container ends-->
    </div><!--theme tertiary ends-->

    <div class='theme--secondary'>
        <div class='grid-container-xl' >
            
            {{ macros.lego('content.intro', {
                'content': data.typographySection, 
            }) }}
            
            <div class='grid'>
                {{ macros.lego('section.typography', {
                        'content': data.typographyPrimary,
                        'fonts':data.fonts,
                        'type': 'primary'
                }) }}

                <div class='grid__item col'>
                    <hr class='mt-l mb-l'/>
                </div>
                
                {{ macros.lego('section.typography', {
                        'content': data.typographySecondary,
                        'fonts':data.fonts,
                        'type': 'secondary'
                }) }}
            
            </div><!--grid ends-->
        </div><!--grid container ends-->
    </div><!--theme ends-->

    <div class='theme--tertiary'>
        <div class='grid-container-xl'>
            {{ macros.lego('content.intro', {
                'content': data.heirarchySection, 
            }) }}
            <div class='theme--primary radius'>
                <div class='grid'>
                    <div class='grid__item col'>
                        {{ macros.lego('content.block', {
                            'content': data.typography,
                        }) }}
                    </div><!--theme ends-->
                </div>
            </div>
        </div><!--grid container ends-->
    </div><!--theme ends-->

{% endblock %}